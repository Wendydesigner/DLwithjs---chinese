(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{217:function(t,s,e){"use strict";e.r(s);var l=e(17),v=Object(l.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"迁移学习：重用预训练的神经网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#迁移学习：重用预训练的神经网络"}},[t._v("#")]),t._v(" 迁移学习：重用预训练的神经网络")]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("内容包括：")]),t._v(" "),e("ul",[e("li",[t._v("什么是迁移学习？为什么它比针对多种类型的问题从头训练模型更好？")]),t._v(" "),e("li",[t._v("如何通过从 Keras 进行转换并将其导入 TensorFlow.js 来利用最新的预训练卷积神经网络（convnets）的特征提取能力")]),t._v(" "),e("li",[t._v("什么是 SymbolicTensor 以及它们如何帮助您实现模型组件的灵活“即插即用”")]),t._v(" "),e("li",[t._v("为什么您应该在迁移学习期间冻结其他层来仅更新模型的某些层")]),t._v(" "),e("li",[t._v("如何用新的输出层替换预训练卷积网络的输出层，以解决不同类型的迁移学习任务和数据集")]),t._v(" "),e("li",[t._v("什么是微调及其如何帮助您从迁移学习中获得更准确的模型")]),t._v(" "),e("li",[t._v("如何在 TensorFlow.js 中使用迁移学习来实现对象检测")])])]),t._v(" "),e("p",[t._v("在第四章中，我们介绍了如何训练卷积神经网络（convnets）对图像进行分类。但是对手写数字进行分类的 convnet，用户体验很差，因为用户笔迹与原始训练数据有很大不同。我们能否通过使用少量的数据（比如说 50 个例子）来改进模型，以便更好地为用户服务？考虑另一个场景：一个电子商务网站希望自动分类用户上传的商品图片，但是没有一个开源的 convnets（例如 MobileNet[72]）在这样类别的图像上训练。如果有少量（比如几百张）标签图片，是否可以利用公共可用的图像模型来解决自定义分类问题？")]),t._v(" "),e("p",[t._v("幸运的是，本章的重点是一种称为迁移学习的技术，它可以帮助解决此类任务。")])])}),[],!1,null,null,null);s.default=v.exports}}]);